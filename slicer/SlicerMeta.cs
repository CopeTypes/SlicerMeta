using SlicerMeta.parser;

namespace SlicerMeta
{
    // Global metadata class for the slicer itself
    public class SlicerMeta
    {
        
        public string SlicerName { get; private set; } // these are all contained in the first line
        public string SlicerVersion { get; private set; }
        public string SliceDate { get; private set; }
        public string SliceTime { get; private set; }
        
        public string PrintEta { get; private set; } // eta is set by the parser since it's not part of the "header" line
        public SlicerType Slicer { get; private set; }
        
        

        public SlicerMeta()
        {
            SetDefaults();
        }

        public SlicerMeta FromString(SlicerType slicer, string line)
        {
            Slicer = slicer;
            var data = line.Replace(";", "").Split(' ');
            switch (slicer)
            { // these seem to follow similar enough patterns so implementing more slicers shouldn't be an issue
                // however these two are the only ones officially supported by FlashForge (printers)
                // which this library mainly targets
                case SlicerType.FlashPrint:
                    // generated by ffslicer 2.4.4 12/03/24 15:13:28
                    // 0          1   2        3    4           5
                    SlicerName = data[2];
                    SlicerVersion = data[3];
                    SliceDate = data[4];
                    SliceTime = ParserHelper.ParseSliceTime(data[5]);
                    break;
                case SlicerType.OrcaFF:
                    //generated by Orca-Flashforge 1.1.0 on 2024-12-03 at 15:16:09
                    // 0        1       2            3    4     5      6      7
                    SlicerName = data[2];
                    SlicerVersion = data[5];
                    SliceDate = data[7];
                    SliceTime = ParserHelper.ParseSliceTime(data[7]);
                    break;
                default:
                case SlicerType.Unknown:
                    SetDefaults();
                    break;
            }

            return this;
        }

        public void SetEta(string eta)
        {
            // model printing time: 43m 42s; total estimated time: 43m 42s
            // 0        1       2    3   4     5      6       7     8   9
            var data = eta.Split(' ');
            PrintEta = data[8] + data[9];
        }

        private void SetDefaults()
        {
            SlicerName = "Unknown";
            SlicerVersion = "Error";
            SliceDate = "Error";
            SliceTime = "Error";
        }
    }
}