using System.IO;

namespace SlicerMeta.parser.gcode
{
    // Parse gcode files generated by FlashPritn
    public class FlashPrintParser
    {
        
        public static (SlicerMeta, SlicerFileMeta) Parse(string filePath)
        {
            using (var reader = new StreamReader(filePath))
            {
                var sliceMeta = new SlicerMeta();
                var fileMeta = new SlicerFileMeta();
                
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    line = line.Trim();
                    if (!line.StartsWith(";")) break; // end of header
                    
                    if (line.StartsWith(";generated by"))
                    { // parse slicer metadata
                        sliceMeta = new SlicerMeta().FromString(SlicerType.FlashPrint, line);
                        continue;
                    }

                    ParseConfigLine(line, fileMeta);
                }

                return (sliceMeta, fileMeta);
            }
        }
        
        // todo see if there is anything else available worth including
        private static void ParseConfigLine(string line, SlicerFileMeta fileMeta)
        {
            // ;right_extruder_material: PLA -> right_extruder_material
            var name = line.Split(' ')[0].Replace(";", "").Replace(":", "").Trim();

            switch (name)
            {
                case "machine_type":
                    fileMeta.PrinterModel = ParseGenericValue(line, "machine_type");
                    break;
                case "right_extruder_material":
                    fileMeta.FilamentType = ParseGenericValue(line, "right_extruder_material");
                    break;
            }
            // flashprint doesn't include any ETAs or filament used data, etc :(
        }
        
        private static string ParseGenericValue(string line, string name)
        { // ;machine_type: Creator Pro 2 -> Creator Pro 2
            return line.Replace($";{name}: ", "").Trim();
        }
        
    }
}